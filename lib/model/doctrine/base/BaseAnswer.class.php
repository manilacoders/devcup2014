<?php

/**
 * BaseAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profile_id
 * @property integer $question_id
 * @property string $answer
 * @property Profile $profile
 * @property Question $question
 * 
 * @method integer  getProfileId()   Returns the current record's "profile_id" value
 * @method integer  getQuestionId()  Returns the current record's "question_id" value
 * @method string   getAnswer()      Returns the current record's "answer" value
 * @method Profile  getProfile()     Returns the current record's "profile" value
 * @method Question getQuestion()    Returns the current record's "question" value
 * @method Answer   setProfileId()   Sets the current record's "profile_id" value
 * @method Answer   setQuestionId()  Sets the current record's "question_id" value
 * @method Answer   setAnswer()      Sets the current record's "answer" value
 * @method Answer   setProfile()     Sets the current record's "profile" value
 * @method Answer   setQuestion()    Sets the current record's "question" value
 * 
 * @package    devcup2014
 * @subpackage model
 * @author     kncapara@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answers');
        $this->hasColumn('profile_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('answer', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));


        $this->index('answer', array(
             'fields' => 
             array(
              0 => 'answer',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profile as profile', array(
             'local' => 'profile_id',
             'foreign' => 'id'));

        $this->hasOne('Question as question', array(
             'local' => 'question_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}