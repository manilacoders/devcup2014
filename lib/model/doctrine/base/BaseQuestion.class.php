<?php

/**
 * BaseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $type
 * @property string $question
 * @property array $metadata
 * @property string $answer
 * @property integer $exam_id
 * @property Exam $exam
 * 
 * @method string   getType()     Returns the current record's "type" value
 * @method string   getQuestion() Returns the current record's "question" value
 * @method array    getMetadata() Returns the current record's "metadata" value
 * @method string   getAnswer()   Returns the current record's "answer" value
 * @method integer  getExamId()   Returns the current record's "exam_id" value
 * @method Exam     getExam()     Returns the current record's "exam" value
 * @method Question setType()     Sets the current record's "type" value
 * @method Question setQuestion() Sets the current record's "question" value
 * @method Question setMetadata() Sets the current record's "metadata" value
 * @method Question setAnswer()   Sets the current record's "answer" value
 * @method Question setExamId()   Sets the current record's "exam_id" value
 * @method Question setExam()     Sets the current record's "exam" value
 * 
 * @package    devcup2014
 * @subpackage model
 * @author     kncapara@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuestion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('questions');
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('question', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('metadata', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('answer', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('exam_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('type', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Exam as exam', array(
             'local' => 'exam_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}